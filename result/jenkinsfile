pipeline {
agent none

    stages {

        stage('build') {
        agent {
            docker {
                image 'node:8.16.0-alpine'
            }
        }
          when{
            changeset "**/result/**"
          }
            steps{
                echo "Compiling result app"
                dir('result'){
                  sh 'npm install'
                }
            }
        }
        stage('test') {
          agent {
              docker {
                  image 'node:8.16.0-alpine'
              }
          }

          when{
            changeset "**/result/**"
          }
            steps{
                echo "Running Unit Tests on result app"
                dir('result'){
                  sh 'npm install'
                  sh 'npm test'
                }

            }
        }
        stage('docker-package') {
          agent any
            when{
              changeset "**/result/**"
              branch 'master'
            }
              steps{
              echo "Packaging worker result app with docker"
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                  def workerImage = docker.build("cziaul/result:v${env.BUILD_ID}", "./result")
                  workerImage.push()
                  workerImage.push("${env.BRANCH_NAME}")
                }
              }
          }
      }

    }
    post{
        always{
            echo "Pipeline for result is completed.."
        }
        failure{
          slackSend(channel: "jenkinswithslackfornodejs", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success{
          slackSend(channel: "jenkinswithslackfornodejs", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }

    }
}
