pipeline {
    agent none


    stages {
        stage('Build') {
            agent {
                docker{
                    image 'python:2.7.16-slim'
                    args '-u root -v python_local:/.local'
                }
            }
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Compiling vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('Test') {
            agent {
                docker{
                    image 'python:2.7.16-slim'
                    args '-u root -v python_local:/.local'
                }
            }
            when {
                changeset "**/vote/**"
            }
            steps {
                echo 'Running unit tests on vote app'
                dir('vote'){
                    sh 'nosetests -v'
                }
            }
        }

        stage('docker-package') {
            agent any
            when {
                branch 'master'
                changeset "**/vote/**"
            }
            steps {
                echo 'Packaging vote app with docker'
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                        def voteImage = docker.build("peakie47/vote:v${env.BUILD_ID}", "./vote")
                        voteImage.push()
                        voteImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'Build pipeline for vote app is complete'
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
            slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}
