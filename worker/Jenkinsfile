pipeline {
  agent { 
    docker{
      image 'maven:3.6.1-jdk-8-alpine'
      args '-v $HOME/.m2:/root/.m2'
    }
  }

  stages{
    stage('build'){
      when{
        changeset "**/worker/**"
      }
      steps{
        echo 'Compiling worker app'
        dir('worker'){
          sh 'mvn compile'
        }
      }
    }
    stage('test'){
      when{
        changeset "**/worker/**"
      }
      steps{
        echo 'Running Unit tests on worker app'
        dir('worker'){
          sh 'mvn clean test'
        }
      }
    }
    stage('docker-package'){
      when{
        changeset "**/worker/**"
      }
      steps{
        echo 'Packing worker app with docker'
        script{
          docker.withRegistry('https://index.docker.io/v1', 'dockerlogin'){
            def workerImage = docker.build("minhviet/worker:v${env.BUILD_ID}", "./worker/")
            workerImage.push()
            workerImage.push("${ENV.BRANCH_NAME}")
          }
        }
      }
    }
  }
  post {
    always{
      echo 'Pipeline successfully'
    }
    failure{
      slackSend (channel: "general", message: "Build failed- ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    success{
      slackSend (channel: "general", message: "Build successed- ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
  }
}