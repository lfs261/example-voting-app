pipeline {
    agent {
        docker{
            image 'maven:alpine'
            args '-v $HOME/.m2:/root/.m2'
        }
    }

    stages {
        stage('Build') {
            when {
                changeset "**/worker/**"
            }
            steps {
                echo 'Compiling worker app'
                dir('worker'){
                    sh 'mvn compile' 
                }
            }
        }
        stage('Test') {
            when {
                changeset "**/worker/**"
            }
            steps {
                echo 'Running unit tests on worker app'
                dir('worker'){
                    sh 'mvn clean test' 
                }
            }
        }
        stage('docker-package') {
            when {
                changeset "**/worker/**"
            }
            steps {
                echo 'Packaging worker app with docker'
                docker.withRegistry('https://index.docker.io/v1', 'dockerlogin') {
                    def workerImage = docker.build("peakie47/worker:v${env.BUILD_ID}", "./worker")
                    workerImage.push()
                    workerImage.push("${env.BRANCH_NAME}")
                }
            }
        }
    }
    
    post {
        always {
            echo 'Build pipeline for worker is complete'
        }
        failure {
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success {
            slackSend (channel: "instavote-cd", message: "Build Succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
    }
}

